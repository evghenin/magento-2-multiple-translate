<?php
/**
 * Magepow 
 * @category    Magepow 
 * @copyright   Copyright (c) 2014 Magepow (http://www.magepow.com/) 
 * @license     http://www.magepow.com/license-agreement.html
 * @Author: DOng NGuyen<nguyen@dvn.com>
 * @@Create Date: 2016-01-05 10:40:51
 * @@Modify Date: 2018-03-27 00:11:49
 * @@Function:
 */

namespace Magepow\MultiTranslate\Controller\Adminhtml\Catalog;

class Save extends \Magepow\MultiTranslate\Controller\Adminhtml\Catalog
{

    /**
     * @var \Magento\Framework\View\Result\PageFactory
     */
    public function execute()
    {
        $resultRedirect = $this->_resultRedirectFactory->create();

        if ($data = $this->getRequest()->getPostValue()) {

            $model = $this->_categoryFactory->create();
            $productFactory = $this->_productFactory->create();

            if ($id = $this->getRequest()->getParam('entity_id')) {
                $model->load($id); //default
                $products = $model->getProductCollection()->addAttributeToSelect('*');
                foreach ($products as $item) {
                    $product_id = $item->getId();
                    $_data = array();
                    $productFactory->load($product_id);
                    $filed = 'name_' . $product_id;
                    $_data['name'] = $filed;
                    $productFactory->addData($_data);
                    try {
                            $productFactory->save();
                        } catch (\Exception $e) {
                            $this->messageManager->addError($e->getMessage());
                            $this->messageManager->addException($e, __('Something went wrong while saving the product.'));
                        }            
                    $stores = $this->_storeManager->getStores();
                    foreach ($stores as $store) {
                        $_storeId = $store->getId();
                        $productFactory->setStoreId($_storeId)->load($product_id);
                        $_data = array();

                        $filed = 'name_' . $product_id . '_' . $_storeId;

                        /**
                         * Check "Use Default Value" checkboxes values
                         */
                        if (isset($data['use_default']["$filed"])) {
                            $productFactory->setData('name', null);
                            // if ($model->hasData('use_config_name')) {
                                $productFactory->setData('use_config_name', false);
                            // }
                        } else {
                            $_data['name'] = $data["$filed"];
                        }

                        $productFactory->addData($_data)->setStoreViewId($_storeId);
                        try {
                                $productFactory->save();
                            } catch (\Exception $e) {
                                $this->messageManager->addError($e->getMessage());
                                $this->messageManager->addException($e, __('Something went wrong while saving the product.'));
                            }
                    }
                }
            }

            try {

                $this->messageManager->addSuccess(__('The Product has been saved.'));
                $this->_getSession()->setFormData(false);

                if ($this->getRequest()->getParam('back') === 'edit') {
                    return $resultRedirect->setPath(
                        '*/*/edit',
                        [
                            'category_id' => $model->getId(),
                            '_current' => true,
                            'store' => $storeViewId,
                            'current_category_id' => $this->getRequest()->getParam('current_category_id'),
                            'saveandclose' => $this->getRequest()->getParam('saveandclose'),
                        ]
                    );
                } elseif ($this->getRequest()->getParam('back') === 'new') {
                    return $resultRedirect->setPath(
                        '*/*/new',
                        ['_current' => TRUE]
                    );
                }

                return $resultRedirect->setPath('*/*/');
            } catch (\Exception $e) {
                $this->messageManager->addError($e->getMessage());
                $this->messageManager->addException($e, __('Something went wrong while saving the product.'));
            }

            $this->_getSession()->setFormData($data);

            return $resultRedirect->setPath(
                '*/*/edit',
                ['category_id' => $this->getRequest()->getParam('category_id')]
            );
        }

        return $resultRedirect->setPath('*/*/');
    }
}
